#!/usr/bin/env python

import threading
import Queue
import ftplib
import getopt
import os
import sys
import time

DEF_THREAD_CNT = 5
DEF_NAP_TIME = 10

class FTPExcept(Exception):
    def __init__(self, v):
        self.value = v

    def __str__(self):
        return repr(self.value)

class FTPWT(threading.Thread):
    def __init__(self, q, lock, s=DEF_NAP_TIME):
        threading.Thread.__init__(self)
        self.queue = q
        self.sleep_time = s
        self.lock = lock

    def run(self):
        ftpsite = self.queue.get()
        while True:
            try:
                print "Connect to site: " + ftpsite + " ================================================================"
                f = ftplib.FTP(ftpsite)
                f.login()
                if self.lock:
                    self.lock.aquire()
                f.retrlines('LIST')
                if self.lock:
                    self.lock.release()
                print "Listing completed ================================================================"
            except Exception as e:
                print >> sys.stderr, "FTPWT exception: ", e
                pass
            finally:
                time.sleep(self.sleep_time)
                self.queue.task_done()
                f.quit()


def usage():
    print >> sys.stderr, sys.argv[0] + ": list ftp site directory contents"
    print >> sys.stderr, "usage is: " + sys.argv[0] + " -s site_list -t thread_count -n sleep_time -l [-h]"
    print >> sys.stderr, "site_list can be a comma-delimited list of sites"

def process_args(argv):
    sites = []
    thread_count = -1
    nap_time = -1
    locking = False

    try:
        opts, args = getopt.getopt(argv, 'hs:t:l')
    except getopt.GetoptError:
        usage()
        sys.exit(1)

    for opt, arg in opts:
        if opt == '-h':
            usage()
            sys.exit(2)
        elif opt == '-s':
            for s in (arg.split(',')):
                sites.append(s)
        elif opt == '-t':
            thread_count = int(arg)
        elif opt == '-n':
            nap_time = int(arg)
        elif opt == '-l':
            locking = True

    return (sites, thread_count, nap_time, locking)

def queue_em(sites, locking, t=DEF_THREAD_CNT, s=DEF_NAP_TIME):
    queue = Queue.Queue()

    lock = None
    if locking:
        lock = threading.Lock()

    for i in range(1, t+1):
        worker = FTPWT(queue, lock, s=s)
        worker.setDaemon(True)
        worker.start()
        print "FTPWT worker %d created" %i

    for site in sites:
        queue.put(site.strip())

    queue.join()

if __name__ == "__main__":
    (sites, thread_count, nap_time, locking) = process_args(sys.argv[1:])
    try:
        if len(sites) < 1:
            raise FTPExcept("no sites specified")

        if thread_count < 1:
            thread_count = DEF_THREAD_CNT
            print >> sys.stderr, "warning: no thread count (-t) specified - using default %d" %DEF_THREAD_CNT

        if len(sites) < thread_count:
            print >> sys.stderr, "thread count exceeds number of sites to check - using number of sites as thread count"
            thread_count = len(sites)

        if nap_time < 1:
            print >> sys.stderr, "warning: no sleep time (-n) argument specified - using default %d" %DEF_NAP_TIME
            nap_time = DEF_NAP_TIME

        queue_em(sites, locking, t=thread_count, s=nap_time)
        print "all threads completed"

    except FTPExcept as e:
        print "fatal error: ", e.value
        sys.exit(3)